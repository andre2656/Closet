{"ast":null,"code":"import _classCallCheck from \"/Users/ChristinaLavingia/UCLA-Homework/Project-3/Closet/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ChristinaLavingia/UCLA-Homework/Project-3/Closet/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ChristinaLavingia/UCLA-Homework/Project-3/Closet/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ChristinaLavingia/UCLA-Homework/Project-3/Closet/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ChristinaLavingia/UCLA-Homework/Project-3/Closet/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ChristinaLavingia/UCLA-Homework/Project-3/Closet/client/src/components/MotivationalQuote/index.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\n/**\n * Displays a random motivatioal quote from our API\n */\n\nvar MotivationalQuote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MotivationalQuote, _Component);\n\n  function MotivationalQuote() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MotivationalQuote);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MotivationalQuote)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      quotes: [],\n      chosenQuote: \"\",\n      displayedQuote: \"\"\n    };\n\n    _this.pickQuote = function () {\n      var numQuotes = _this.state.quotes.length;\n      var randomQuoteIndex = Math.floor(Math.random() * numQuotes);\n\n      _this.setState({\n        chosenQuote: _this.state.quotes[randomQuoteIndex].quote\n      });\n\n      _this.animateQuote(50);\n    };\n\n    _this.animateQuote = function (delay) {\n      var _loop = function _loop(i) {\n        setTimeout(function () {\n          _this.setState({\n            displayedQuote: _this.state.chosenQuote.slice(0, i)\n          });\n        }, delay * i);\n      };\n\n      for (var i = 0; i <= _this.state.chosenQuote.length; i++) {\n        _loop(i);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MotivationalQuote, [{\n    key: \"componentDidMount\",\n\n    /**\n     * When the component is very first displayed on the webpage\n     */\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"/api/motivation\").then(function (response) {\n        _this2.setState({\n          quotes: response.data\n        }); // Pick a random quote and set the timer to pick another one later\n\n\n        _this2.pickQuote();\n\n        setInterval(_this2.pickQuote, 5000);\n      });\n    }\n    /**\n     * Called when the component is first displayed, and when the props or state changes\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.displayedQuote);\n    }\n  }]);\n\n  return MotivationalQuote;\n}(Component);\n\nexport default MotivationalQuote;","map":{"version":3,"sources":["/Users/ChristinaLavingia/UCLA-Homework/Project-3/Closet/client/src/components/MotivationalQuote/index.js"],"names":["React","Component","axios","MotivationalQuote","state","quotes","chosenQuote","displayedQuote","pickQuote","numQuotes","length","randomQuoteIndex","Math","floor","random","setState","quote","animateQuote","delay","i","setTimeout","slice","get","then","response","data","setInterval"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;;;IAGMC,iB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,cAAc,EAAE;AAHV,K;;UASRC,S,GAAY,YAAM;AAChB,UAAMC,SAAS,GAAG,MAAKL,KAAL,CAAWC,MAAX,CAAkBK,MAApC;AACA,UAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,SAA3B,CAAzB;;AAEA,YAAKM,QAAL,CAAc;AACZT,QAAAA,WAAW,EAAE,MAAKF,KAAL,CAAWC,MAAX,CAAkBM,gBAAlB,EAAoCK;AADrC,OAAd;;AAIA,YAAKC,YAAL,CAAkB,EAAlB;AACD,K;;UAKDA,Y,GAAe,UAACC,KAAD,EAAW;AAAA,iCACfC,CADe;AAEtBC,QAAAA,UAAU,CAAC,YAAM;AACf,gBAAKL,QAAL,CAAc;AAAER,YAAAA,cAAc,EAAE,MAAKH,KAAL,CAAWE,WAAX,CAAuBe,KAAvB,CAA6B,CAA7B,EAAgCF,CAAhC;AAAlB,WAAd;AACD,SAFS,EAEPD,KAAK,GAAGC,CAFD,CAAV;AAFsB;;AACxB,WAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,MAAKf,KAAL,CAAWE,WAAX,CAAuBI,MAA5C,EAAoDS,CAAC,EAArD,EAAyD;AAAA,cAAhDA,CAAgD;AAIxD;AACF,K;;;;;;;;AAED;;;wCAGoB;AAAA;;AAClBjB,MAAAA,KAAK,CAACoB,GAAN,CAAU,iBAAV,EACGC,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,QAAA,MAAI,CAACT,QAAL,CAAc;AAAEV,UAAAA,MAAM,EAAEmB,QAAQ,CAACC;AAAnB,SAAd,EADgB,CAGhB;;;AACA,QAAA,MAAI,CAACjB,SAAL;;AACAkB,QAAAA,WAAW,CAAC,MAAI,CAAClB,SAAN,EAAiB,IAAjB,CAAX;AACD,OAPH;AAQD;AAED;;;;;;6BAGS;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKJ,KAAL,CAAWG,cADd,CADF;AAKD;;;;EAvD6BN,S;;AA0DhC,eAAeE,iBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\n\n/**\n * Displays a random motivatioal quote from our API\n */\nclass MotivationalQuote extends Component {\n  state = {\n    quotes: [],\n    chosenQuote: \"\",\n    displayedQuote: \"\"\n  };\n\n  /**\n   * Picks a random quote and displays it\n   */\n  pickQuote = () => {\n    const numQuotes = this.state.quotes.length;\n    const randomQuoteIndex = Math.floor(Math.random() * numQuotes);\n\n    this.setState({\n      chosenQuote: this.state.quotes[randomQuoteIndex].quote\n    });\n\n    this.animateQuote(50);\n  }\n\n  /**\n   * Animates the quote into view one character at a time\n   */\n  animateQuote = (delay) => {\n    for (let i = 0; i <= this.state.chosenQuote.length; i++) {\n      setTimeout(() => {\n        this.setState({ displayedQuote: this.state.chosenQuote.slice(0, i) });\n      }, delay * i);\n    }\n  }\n\n  /**\n   * When the component is very first displayed on the webpage\n   */\n  componentDidMount() {\n    axios.get(\"/api/motivation\")\n      .then(response => {\n        this.setState({ quotes: response.data });\n\n        // Pick a random quote and set the timer to pick another one later\n        this.pickQuote();\n        setInterval(this.pickQuote, 5000);\n      });\n  }\n\n  /**\n   * Called when the component is first displayed, and when the props or state changes\n   */\n  render() {\n    return (\n      <span>\n        {this.state.displayedQuote}\n      </span>\n    );\n  }\n}\n\nexport default MotivationalQuote;"]},"metadata":{},"sourceType":"module"}